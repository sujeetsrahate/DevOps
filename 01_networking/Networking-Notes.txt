DEVEOPS
OSI Model (Open System interconnection )
Application Layer:
 It provides network Service to the end users (HTTP,FTP)
 HTTP Port Number Default 8080 / HTTPS PortNumber Default 443.
 FTP(File Transfer) Port no : 20/21
 SMTP(Simple Mail Transfer Protocol) Port no : 25
Presentation Layer:
 It do Encoding and Encryption.
 Encoding uses Algorithm.
 Encryption use Algorithm and Key -> it will be provided by the Person who Encrypting.
Session layer:
 Manage Connections, Establish Connections, Terminates Connection.
Transport Layer: (TCP- Transfer Control Protocol)
 Manage End – End Communication, Data Transfer, Error Handling.
 It is a Communication Oriented Protocol so it send data and wait For response.
Network Layer:
 Handles routing and forwarding of data packets (e.g., IP).
Data Link Layer: { Divide into Frames }
 Responsible for Node to Node Delivery of data or Divide data into frames and it is
responsible for error detection/correction and also also responsible for encoding,
decoding, and organizing the outgoing and incoming data. Includes technologies like
Ethernet.
Physical Layer: {0,1}
• It transfers the data from one computer to another computer using Cables in
the form of Bits
• Deals with hardware transmission, such as cables, switches, and other
physical devices.
Network Types:
LAN
Local Area Network Which is locally connected through Wires in a small area
Like Office, Home. It connects devices like computers and printers.
WAN
Wide Area network that spans a large geographic area, like connecting cities
or countries. The internet is an example of a WAN.
MAN
Metropolitan Area that covers a city or a large campus area.
PAN
Personal area used for personal devices, typically within a few meters (e.g.,
Bluetooth).
Nodes :- It may be any device like Computer,Laptop.
Host :- It is Only Computers.
Protocols:- Set Of Rules to Transfer Data.
SSH :- Uses 22 Port
DNS:- P no = 53
HTTP:- 80
HTTPS:- 443
MySQL:- 3306
Sockets :- Combination of IP Addrres And Port.
Port :- Identific specific processor or service.
MODEM AND ROUTER
MODEM:- [ signal translator ] { Connects to network with LAN }
• It stands for Modulation and demodulation it can perform simultaneously
both at a time.
• The main function of a modem is to convert the analog signals that come
from telephone wire into a digital form which will be stored in 0’s and 1’s.
• Digital Signal {Modulating} --- Analog Signal {Demodulating}.
ROUTER:- { distributes the network }
• A device that forwards data between different networks. Routers connect
different network segments (e.g., LAN to WAN).
DNS( Domain Name System )
• It will convert Domain Name {www.google.com } to IP Address {
190.263.22.9.0} .
• The process Of conversion
HTTP OVERVIEW MOTHODS:-

 200 OK
 201 Created ( Post )
 202 Accepted
 204 No Content
 301 Moved Permanetly
 302 Found
 304 Not Modified
 307 Temporary Redirect
 400 Bad Request
 401 UnAuthorized
 403 Forbidden
 404 Not found
 405 Mthod Not Allowed
Client Server
 408 Request Time out
 500 Interna Server Error
 501 Not Implemented
 502 Bad Gateway
 503 Service Unvaiable
 504 Gate Way TimeOut.
WINDOWING

• If None of the packet didn’t get Response it will start from the starting
again.
VPN ( Virtual Private Network )
• It Allows User to Connect to private network Securely and privately.
• It will Create an encryption VPN called VPN Tunnel, All the traffic and
communication will be passed through this secure tunnel.
• Two Types
➢ Remote Access VPN
• It Allows user to connect to a private network and access all
its services and resources remotely.
Example:- An employee of a company, while he/she is out of
station, uses a VPN to connect to his/her company’s private
network and remotely access files and resources on the
private network.
➢ Site to Site VPN ( Uses in Large Companies )
• A Site-to-Site VPN is also called as Router-to-Router VPN.
• Companies which have Different branches in different
Locations use this VPN to Connect the network of one office
location to the network at another office location.
➢ Cloud VPN
• It is Used to allow users to securely connect the cloud based
infrastructure.
• Cloud VPNs are typically offered as a service by cloud
providers such as Amazon Web Services (AWS) and
Microsoft Azure.
File to Server
Server to File
• This uses Encryption and Security Protocol as VPN’s ( IPsec
or SSL ) to securely transmit the data.
➢ Mobile VPN
• It allows users to connect the network securely to a private
network through cellular data.
• It will create Connection between mobile and VPN server.
• Mobile VPNs are available as standalone apps.
➢ SSL VPN
• It uses SSL Protocol to connect between User and VPN
server. Securely.
TYPES OF VPN PROTOCOLS
➢ IPSec ( Internet Protocol Secure )
• It is used to Secure internet connection across IP network.
• IPsec secures Internet Protocol communication by verifying
the session and encrypts each data packet during the
connection.
➢ L2TP ( Layer 2 Tunnelling Protocol )
• To Establish a High Secure VPN Connection we will Combine
the Another VPN security Protocol like IPSec.
➢ PPTP ( Point to Point Tunneling Protocol )
➢ SSL and TLS
➢ SSH
➢ SSTP
Reference :- Types of Virtual Private Network (VPN) and its Protocols - GeeksforGeeks
--------------------------------x-------------------------------
CheckSum :-
1. Checksum is the error detection method Or it is a validation Process.
2. This method uses a Checksum Generator on the sender side and a Checksum
Checker on the receiver side.
3. It is a unique number generated from data to verify its integrity
Advantages of Checksum
1. Error Detection
2. Simple And Fast
3. Less Resources
Cookies
1. Cookies are small text Files or Activity history that a web server generates and sends
to a web browser.
OR
2. Cookies are small pieces of information that a website saves on your computer.
3. These files help websites remember details about your visit, such as your
preferences or login status, so they can use that information the next time you visit.
Types of Cookies
1. Session Cookies
Sesion Cookies are used when the user browser is open. And this cookies will be
deleted when the browser will be closed and Session is in- active.
2. Persistent Cookies ( permanent )
Persistent Cookies are used for long term than Sesion Cookies.
3. First-Party Cookies
4. Third-Party Cookies
Scalability and Elasticity
Scalability refers to a system’s ability to handle growing amounts of work or its
potential to accommodate growth. This is achieved by increasing either the
resources of a system (vertical scaling) or the number of systems (horizontal
scaling).
Elasticity, on the other hand, is the ability of a system to dynamically adjust its
resources to handle changes in demand. It means a system can expand and
contract resources based on the workload in real-time, which is crucial for handling
fluctuating traffic volumes in cloud computing environments.
Types of Scaling
1. Vertical Scaling:
• Definition: Vertical scaling involves adding more resources (CPU, memory,
storage) to a single machine.
• Example: Upgrading a server from 4GB RAM to 16GB RAM.
• When to use: Useful when you have a single system that is underperforming
and needs more power.
• Limitations: There's a limit to how much hardware you can add to a single
machine.
2. Horizontal Scaling:
• Definition: Horizontal scaling means adding more machines to a network or
system to distribute the workload.
• Example: Adding more web servers to handle increasing traffic.
• When to use: Useful for handling large amounts of traffic and ensuring
redundancy.
• Important: A load balancer is required to distribute traffic across machines.
• Stateless Applications: For horizontal scaling, the application should be
stateless, meaning the state should be stored in a separate system (e.g.,
database, cache).
Cluster
A cluster refers to a group of linked computers (servers) working together as a
single system. They typically function in parallel to improve performance,
redundancy, and fault tolerance.
• Types of Clusters:
• Load Balancing Cluster: Distributes client requests across multiple servers to
prevent any single server from becoming a bottleneck.
• High-Availability Cluster: Ensures minimal downtime by automatically
switching to backup servers if the main server fails.
• Compute Cluster: Used for high-performance computing tasks like scientific
research, rendering, and data analysis.
Network Topologies
A network topology defines how various devices in a network are connected and how data
flows between them.
• Bus Topology: A single central cable (the "bus") connects all devices. It is simple but
has a single point of failure (if the bus cable fails, the whole network goes down).
• Star Topology: All devices are connected to a central hub or switch. If one device
fails, it doesn’t affect others, but if the hub fails, the whole network goes down.
• Ring Topology: Devices are connected in a circular manner. Data travels in one
direction. If one device fails, the entire network could be impacted unless a "dual ring"
is used for redundancy.
• Mesh Topology: Every device is connected to every other device. It provides high
redundancy but can be expensive to implement due to the number of connections.
• Hybrid Topology: A combination of two or more topologies, tailored to meet specific
organizational needs.
Peer-to-Peer (P2P) Architecture
In Peer-to-Peer (P2P) architecture, all devices act as both clients and servers. They
communicate directly with each other, rather than through a centralized server. This makes
P2P systems decentralized and more resilient.
• Example: File-sharing applications like BitTorrent allow direct device-to-device
communication without a central server.
• Advantages: Reduces dependency on centralized infrastructure, often more costeffective.
• Disadvantages: Security and management can be more challenging compared to
centralized systems.
--------------------------------x-----------------------------------
Internet Protocol (IP)
Internet Protocol (IP) is the fundamental protocol used for communication between devices
on the internet. It enables the routing and forwarding of data packets between devices over
different networks, including both public and private networks.
• IPv4 vs. IPv6:
• IPv4: IPv4 (Internet Protocol version 4) uses a 32-bit address, represented as
four octets (e.g., 192.168.1.1).
• IPv6: IPv6 (Internet Protocol version 6) uses a 128-bit address, providing a
significantly larger address space than IPv4. It is represented in hexadecimal
format (e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334).
• IP Addressing:
• IP address is a unique identifier assigned to each device connected to a
network.
• Subnet Mask: Defines the network portion and the host portion of an IP
address.
• Default Gateway: The router's IP address that allows communication with
devices outside the local network.
The IP Building Blocks
The key components involved in the working of IP are:
1. IP Addressing:
• A unique identifier for a device on the network (IPv4 or IPv6).
• Subnetting is used to divide networks into smaller segments for efficient
routing.
2. Routing:
• The process of forwarding data packets from the source to the destination
through intermediate routers.
• Routers use routing tables and algorithms (e.g., RIP, OSPF, BGP) to decide the
best path for data.
3. Fragmentation:
• In IPv4, if a packet is too large to be transmitted over a network (MTU -
Maximum Transmission Unit), it gets fragmented into smaller pieces by
routers.
4. Header:
• The IP header contains key information such as source and destination IP
addresses, protocol type, and checksum.
IP Packet
An IP Packet consists of:
• Header: Contains metadata like the source and destination IP addresses, packet
length, and time-to-live (TTL).
• The IP Header typically includes the following fields:
▪ Version: Specifies the version of IP (IPv4 or IPv6).
▪ Header Length: Length of the header.
▪ Type of Service (ToS): Indicates the priority of the packet.
▪ Total Length: The total size of the packet (header + data).
▪ Identification, Flags, Fragment Offset: Used for fragmentation and
reassembly.
▪ TTL (Time to Live): Limits the number of hops a packet can make
before being discarded.
▪ Protocol: Identifies the protocol used in the payload (e.g., TCP, UDP,
ICMP).
▪ Checksum: Ensures the integrity of the header.
▪ Source Address: The sender’s IP address.
▪ Destination Address: The receiver’s IP address.
• Data: The actual data being transferred (e.g., HTTP, FTP data).
ICMP (Internet Control Message Protocol)
ICMP is a network layer protocol used by network devices to send error messages and
operational information.
• ICMP Types:
o Echo Request / Echo Reply (Ping): Used to check the reachability of a device.
o Destination Unreachable: Used when a router or device cannot reach the
destination.
o Time Exceeded: Indicates that the TTL has expired before the packet reaches
the destination.
o Redirect: Used by routers to inform devices about a better route.
• Purpose:
o ICMP is used for diagnostic and error-reporting functions in networking, often
employed in tools like Ping and Traceroute.
PING (Packet Internet Groper)
PING is a diagnostic tool used to test the connectivity between two devices in a network.
• How It Works:
• PING sends ICMP Echo Request messages to a destination IP address.
• The destination responds with an ICMP Echo Reply message.
• It helps to check if the target device is reachable and to measure the roundtrip time (RTT) for packets.
Options:
• ping -t (Windows): Pings until manually stopped.
• ping -c <count> (Linux): Pings a specific number of times.
TraceRoute
Traceroute is a tool that helps to determine the path data takes from the source to the
destination. It uses ICMP (or sometimes UDP) packets to trace the route.
• How It Works:
• Traceroute sends packets with increasing TTL values. Each router along the
path decrements the TTL, and when the TTL reaches zero, the router sends an
ICMP Time Exceeded message back to the source.
• Traceroute records the round-trip time for each hop, allowing it to build the
route.
• Purpose:
• Helps in identifying network bottlenecks and monitoring network
performance.
ARP (Address Resolution Protocol)
ARP is used to map an IP address to a MAC address within a local network.
• How It Works:
• When a device needs to communicate with another device on the same local
network, it uses ARP to find the corresponding MAC address for the target
device’s IP address.
• The device sends an ARP Request broadcast, asking for the MAC address of
the device with a specific IP. The target device replies with an ARP Reply,
providing its MAC address.
• ARP Cache:
• Devices store recently resolved IP-to-MAC address mappings in an ARP cache
for quicker lookup.
Capturing IP, ARP, and ICMP Packets with TCPDUMP
TCPDUMP is a network packet analyzer that allows capturing and analyzing network traffic,
including IP, ARP, and ICMP packets.
• Usage Example:
o Capture IP Packets:
CMD :sudo tcpdump ip
o Capture ARP Packets:
CMD: sudo tcpdump arp
o Capture ICMP Packets:
CMD : sudo tcpdump icmp
• Filtering:
o TCPDUMP allows filtering specific packets using expressions like src, dst,
port, etc.
Example: sudo tcpdump 'src 192.168.1.1 and icmp'
Routing Example
Routing refers to the process of determining the path for packets to travel from the source
to the destination. Routers make routing decisions based on routing tables, which are
populated using routing protocols (e.g., RIP, OSPF, BGP).
Destination Gateway Genmask Flags Metric Ref Use Iface
192.168.1.0 0.0.0.0 255.255.255.0 U 0 0 0 eth0
10.0.0.0 192.168.1.1 255.255.255.0 UG 0 0 0 eth0
0.0.0.0 192.168.1.1 0.0.0.0 UG 0 0 0 eth0
Routing Example:
• For packets destined to 192.168.1.0/24, the router knows they should be sent
directly on the eth0 interface.
• For packets destined to 10.0.0.0/24, the router sends them via the gateway
192.168.1.1.
TCP/IP (Transmission Control Protocol / Internet Protocol) Model
The TCP/IP Model is a simpler, more practical model developed by the Department of
Defense (DoD). It is the foundation of modern internet communications. Unlike the OSI
model, the TCP/IP model consists of four layers, which are mapped to the layers of the OSI
model.
Layers of the TCP/IP Model:
1. Application Layer:
• Function: Similar to the OSI application, presentation, and session layers, this
layer provides network services directly to user applications. It handles
application protocols and user interaction.
• Protocols: HTTP, FTP, SMTP, DNS, POP3, IMAP
• Example: Web browsers, email clients, file transfer programs.
2. Transport Layer:
• Function: This layer is responsible for the end-to-end communication between
devices. It ensures data integrity, error handling, and flow control. It provides
logical communication between processes.
• Protocols: TCP, UDP
• Example: Reliable communication using TCP (e.g., web browsing) or fast,
connectionless communication using UDP (e.g., streaming).
3. Internet Layer:
• Function: This layer handles logical addressing, routing, and packet
forwarding. It defines how data should be transmitted across different
networks.
• Protocols: IP (IPv4, IPv6), ICMP, ARP
• Example: Routers use the Internet layer to route packets based on IP
addresses.
4. Network Access Layer:
• Function: Also known as the Link Layer, it deals with physical transmission
and data link technologies. It defines how data is transmitted over physical
media, such as cables or wireless connections.
• Protocols: Ethernet, Wi-Fi, PPP
• Example: Ethernet frames being transmitted over a wired or wireless network
------------------------------------------x----------------------------------------
Networking Devices
Networking devices play a key role in facilitating communication and data transmission
across a network. They help connect devices, manage traffic, and ensure efficient data
exchange. Below are the most commonly used networking devices:
Routers
• Function: A router is a device that forwards data packets between different
networks. It connects multiple networks (e.g., connecting a local network to the
internet) and determines the best path for the data to travel.
• Operation: Routers use routing tables and protocols to determine the optimal route
for each data packet. Routers can also assign IP addresses, use NAT (Network
Address Translation) to manage private IPs and public IPs, and provide features like
security and traffic management.
• Example: Home routers, enterprise routers, or ISPs (Internet Service Providers)
routers that connect homes or businesses to the Internet.
Switches
• Function: A switch is a device that connects devices within the same network (like
computers, printers, and servers) and manages the flow of data between them. It
operates mainly at the Data Link Layer (Layer 2) of the OSI model, though some
switches also operate at the Network Layer (Layer 3) for routing.
• Operation: Switches maintain a MAC address table to forward data frames to the
correct device in the network. Unlike hubs, which broadcast data to all connected
devices, switches send data only to the specific device that requires it, making them
more efficient.
• Example: Ethernet switches in office networks that manage data traffic between
computers and servers.
Hubs
• Function: A hub is a simple networking device used to connect multiple devices
within a local network, essentially acting as a repeater that sends data packets to all
devices connected to it.
• Operation: Hubs operate at the Physical Layer (Layer 1) of the OSI model and do not
have any intelligence to determine which device needs the data. When a packet
arrives at the hub, it simply broadcasts the packet to all devices, resulting in potential
network congestion.
• Example: Old-school hubs used in small networks before switches became widely
available.
Bridges
• Function: A bridge connects two or more network segments and filters data traffic
between them based on MAC addresses. It reduces network collisions and divides a
large network into smaller, more manageable segments.
• Operation: Bridges work at the Data Link Layer (Layer 2) and help reduce the amount
of traffic on a network by filtering traffic and only forwarding frames that are
destined for a different segment.
• Example: A bridge might connect two different physical media (such as Ethernet and
Wi-Fi) into a single network segment.
Network Interface Cards (NICs)
• Function: A NIC is a hardware component that allows a device (such as a computer,
printer, or server) to connect to a network, whether via wired or wireless connections.
It provides the physical interface for network communication.
• Operation: NICs operate at the Data Link Layer (Layer 2) of the OSI model and use
MAC addresses to identify the device on the network. Modern NICs can support highspeed data transfers, multiple network types (Ethernet, Wi-Fi), and various protocols.
• Example: Ethernet card or wireless Wi-Fi adapter installed in a laptop or desktop
computer.
Modems
• Function: A modem (modulator-demodulator) is a device that converts digital signals
from a computer into analog signals suitable for transmission over telephone lines,
and vice versa. It enables internet access by connecting to an ISP.
• Operation: Modems modulate digital data into analog signals for transmission and
demodulate incoming analog signals back into digital form for the computer.
• Example: A broadband modem connecting your home network to an Internet Service
Provider (ISP).
Gateways
• Function: A gateway is a device that connects two different networks and enables
communication between them, often by translating protocols. It operates at multiple
layers (often Network Layer and Application Layer), making it more complex than a
router or switch.
• Operation: Gateways are responsible for translating data formats and protocols to
ensure devices with different network architectures can communicate. They often
connect private networks (like local networks) to public networks (like the internet).
• Example: A gateway can connect an internal private IP network to the internet via
NAT (Network Address Translation) and convert between different protocol formats.
Networking Protocols
Networking protocols are standardized rules that govern how data is transmitted and
received across a network. Below are some essential networking protocols:
1. TCP (Transmission Control Protocol)
• Function: TCP is a connection-oriented protocol that ensures reliable, error-free data
transmission over a network. It is responsible for breaking data into smaller packets,
sending them over the network, and ensuring they arrive at the destination in the
correct order.
• Operation: TCP uses handshaking (three-way handshake) to establish a connection
and guarantees reliable delivery by acknowledging received packets and
retransmitting lost packets.
• Example: HTTP, FTP, and email protocols like SMTP use TCP to ensure reliable
communication.
2. UDP (User Datagram Protocol)
• Function: UDP is a connectionless, lightweight protocol used for fast, real-time data
transmission. Unlike TCP, UDP does not guarantee delivery or order of packets,
making it faster but less reliable.
• Operation: UDP sends data packets (datagrams) without establishing a connection
or ensuring their delivery. It is commonly used for applications that prioritize speed
over reliability, such as video streaming and online gaming.
• Example: Streaming protocols like RTP (Real-time Transport Protocol) and DNS
(Domain Name System) use UDP.
3. IP (Internet Protocol)
• Function: IP is the primary protocol used to deliver data packets across different
networks. It defines addressing schemes and routing methods, making sure packets
are directed to the correct destination.
• Operation: IP is responsible for logical addressing (assigning IP addresses) and
routing data packets across networks. It can be used with both IPv4 (Internet
Protocol version 4) and IPv6 (Internet Protocol version 6).
• Example: Every device on a network, whether it's on a local network or the internet, is
assigned a unique IP address to ensure proper routing.
4. Ethernet (IEEE 802.3)
• Function: Ethernet is a protocol used in local area networks (LANs) to frame and
transmit data over physical media (such as twisted pair cables, fiber optics, or
coaxial cables). It defines how devices on the same network communicate.
• Operation: Ethernet uses MAC addresses to identify devices in the local network and
handles data framing, error detection, and flow control.
• Example: Ethernet is the most commonly used protocol in wired LANs. When you
connect your computer to the internet via a wired connection, you're using Ethernet.
5. Wi-Fi (IEEE 802.11)
• Function: Wi-Fi is a wireless networking protocol that allows devices to connect to a
network over radio waves. It provides high-speed internet access and is commonly
used in home and office environments.
• Operation: Wi-Fi operates in the Physical and Data Link Layers of the OSI model and
supports wireless communication standards like 802.11a/b/g/n/ac/ax, each with
different frequency bands, speeds, and ranges.
• Example: Devices like smartphones, laptops, and tablets use Wi-Fi to connect to
wireless routers or access points to access the internet.
6. Other LAN/WAN Protocols
• ARP (Address Resolution Protocol): ARP is used to map a device’s IP address to its
physical MAC address in a local network, helping in communication within LANs.
• ICMP (Internet Control Message Protocol): ICMP is used for diagnostic purposes
and error reporting. It’s commonly used by tools like Ping and Traceroute to check
the reachability of devices on a network.
• PPP (Point-to-Point Protocol): PPP is used for direct communication between two
devices, often over a serial link like a telephone line. It’s used in dial-up internet
connections and VPNs.
• Frame Relay: A WAN protocol used for connecting remote locations in a costeffective manner. It operates at the Data Link Layer and provides fast, efficient data
transfer.
• MPLS (Multiprotocol Label Switching): A WAN protocol used for high-performance
data transfer, particularly in large enterprise networks. MPLS directs data using
labels instead of IP addresses, which allows for faster and more efficient routing.
------------------------------------------x-------------------------------------
IP Addressing and Subnetting
IP addressing is a fundamental concept in networking that assigns unique identifiers (IP
addresses) to devices in a network. An IP address allows devices to communicate with each
other over the internet or a local network. Subnetting is a technique used to divide a larger
network into smaller, more manageable sub-networks (subnets). It enables more efficient
use of IP addresses and enhances network security.
IP Addressing
An IP address is a numerical label used to identify a device in a network. There are two
versions of IP addressing: IPv4 and IPv6.
• IPv4: The most commonly used IP version, which uses 32-bit addresses and is
written in dotted decimal notation (e.g., 192.168.1.1).
• IPv6: The newer version of IP, designed to overcome the limitations of IPv4. It uses
128-bit addresses and is written in hexadecimal notation
(e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334).
IPv4 vs. IPv6
IPv4 (Internet Protocol version 4)
• Address Length: 32-bit address (4 bytes).
• Format: Written as four decimal numbers separated by periods (dotted decimal
notation), with each number ranging from 0 to 255.
• Example: 192.168.1.1
• Number of addresses: 2322^{32}232 (approximately 4.3 billion addresses).
• Subnetting: IPv4 supports subnetting, which allows network administrators to divide
the network into smaller sub-networks for better management.
Advantages:
• Simple and widely understood.
• Large installed base, compatible with most devices and applications.
Limitations:
• Exhaustion of available addresses due to the growth of devices and internet usage.
• Needs techniques like NAT (Network Address Translation) to overcome the shortage
of IP addresses.
IPv6 (Internet Protocol version 6)
• Address Length: 128-bit address (16 bytes).
• Format: Written as eight groups of four hexadecimal digits, separated by colons (e.g.,
2001:0db8:85a3:0000:0000:8a2e:0370:7334).
• Number of addresses: 21282^{128}2128 (approximately 340 undecillion addresses).
• Subnetting: IPv6 provides more flexibility in subnetting, with a vast address space
that avoids address shortages.
Advantages:
• Vast address space capable of handling future growth.
• Built-in security features (IPsec) and improved performance.
Limitations:
• Adoption and compatibility issues with legacy systems.
• More complex for administrators and requires updates in network hardware and
software.
IP Address Classes and Ranges
IPv4 addresses are divided into different classes based on the size and purpose of the
network. There are five classes: A, B, C, D, and E. Classes A, B, and C are used for standard
IP addressing, while classes D and E are reserved for special purposes.
Class A (1.0.0.0 to 127.255.255.255)
• Range: 1.0.0.0 to 127.255.255.255
• Default Subnet Mask: 255.0.0.0 (or /8)
• Number of Hosts per Network: Over 16 million
• Used for: Large networks like major ISPs, large companies.
• First octet range: 1 to 127 (the first bit is always 0).
Class B (128.0.0.0 to 191.255.255.255)
• Range: 128.0.0.0 to 191.255.255.255
• Default Subnet Mask: 255.255.0.0 (or /16)
• Number of Hosts per Network: Over 65,000
• Used for: Medium-sized networks like universities and large businesses.
• First octet range: 128 to 191 (the first two bits are 10).
Class C (192.0.0.0 to 223.255.255.255)
• Range: 192.0.0.0 to 223.255.255.255
• Default Subnet Mask: 255.255.255.0 (or /24)
• Number of Hosts per Network: 254
• Used for: Small networks like local businesses and home networks.
• First octet range: 192 to 223 (the first three bits are 110).
Class D (224.0.0.0 to 239.255.255.255)
• Range: 224.0.0.0 to 239.255.255.255
• Used for: Multicast addressing (group communication).
Class E (240.0.0.0 to 255.255.255.255)
• Range: 240.0.0.0 to 255.255.255.255
• Used for: Experimental and future use (reserved for special purposes).
Subnet Masks and Subnetting Techniques
A subnet mask defines the boundary between the network portion and the host portion of an
IP address. By changing the subnet mask, we can divide a network into multiple smaller
networks, called subnets.
Subnet Mask
• Format: A subnet mask is a 32-bit number that accompanies an IP address. It’s often
written in dotted decimal notation (e.g., 255.255.255.0).
• Purpose: It helps the network devices understand which part of the IP address
represents the network and which part represents the host.
Subnetting Techniques
• Subnetting a Class C Network (Example): Let's say we have a Class C address
(192.168.1.0/24) and we want to create subnets to divide it further.
• A /24 subnet mask gives us one network with 254 host addresses. By
borrowing 3 bits from the host portion, we can create 8 subnets (2^3 = 8
subnets).
• The new subnet mask will be /27 (255.255.255.224), which leaves 5 bits for
host addresses, allowing for 30 hosts per subnet.
 Subnet Calculation:
 Subnet 1: 192.168.1.0/27 -> Range: 192.168.1.1 to 192.168.1.30
 Subnet 2: 192.168.1.32/27 -> Range: 192.168.1.33 to 192.168.1.62
 Subnet 3: 192.168.1.64/27 -> Range: 192.168.1.65 to 192.168.1.94
CIDR (Classless Inter-Domain Routing)
• CIDR Notation: CIDR is a method for subnetting IP addresses, where the subnet
mask is represented as a suffix (e.g., 192.168.1.0/27).
• Benefits of CIDR:
• More efficient use of IP addresses.
• Allows for more flexible subnetting compared to traditional class-based
addressing.
Private vs. Public IP Addresses
Public IP Addresses
• Definition: Public IP addresses are unique addresses assigned to devices that are
directly accessible from the internet.
• Range: Public IPs are assigned by organizations such as IANA (Internet Assigned
Numbers Authority).
• Example: 8.8.8.8 (Google DNS server).
Private IP Addresses
• Definition: Private IP addresses are used within a private network and are not
routable over the internet. They are used to allow devices within an organization to
communicate with each other and with the internet via NAT (Network Address
Translation).
• Range: The following ranges are reserved for private networks:
o Class A: 10.0.0.0 to 10.255.255.255 (10.0.0.0/8)
o Class B: 172.16.0.0 to 172.31.255.255 (172.16.0.0/12)
o Class C: 192.168.0.0 to 192.168.255.255 (192.168.0.0/16)
• Example: 192.168.1.1 (common in-home networks).
• NAT (Network Address Translation): Devices in private networks use NAT to
translate private IP addresses into a public IP address when accessing the internet.
This allows multiple devices within a private network to share a single public IP.
------------------------x--------------------------------
Understanding Physical vs. Logical Topologies
In networking, topologies define how devices are connected and how data flows in a
network. There are two types of topologies: physical topology and logical topology. Both are
critical for understanding network design, performance, and troubleshooting.
1. Physical Topology
Definition: Physical topology refers to the actual physical arrangement of the network
devices, cables, and how the physical connections are made between them. It is concerned
with the hardware setup, the cables used, and the physical components in the network.
• Examples of Physical Topologies:
1. Bus Topology: All devices are connected to a single central cable or "bus."
Data travels along the bus in both directions. If the bus cable is damaged, the
whole network goes down.
2. Star Topology: All devices are connected to a central device (e.g., a hub or
switch). If a device fails, it doesn’t affect the others, but if the central device
fails, the whole network is impacted.
3. Ring Topology: Devices are connected in a circular fashion, where data travels
in one direction (or two directions in some implementations). If a connection
breaks, the entire network can be affected.
4. Mesh Topology: Every device is connected to every other device. It provides
high redundancy but can be costly and complex to implement.
5. Hybrid Topology: A combination of two or more different topologies used to
meet the specific needs of a network.
• Advantages:
o Bus Topology: Simple to implement for small networks.
o Star Topology: Easy to install and maintain, isolated failures.
o Mesh Topology: High redundancy and fault tolerance.
• Disadvantages:
o Bus Topology: Single point of failure (if the bus fails, the whole network is
down).
o Ring Topology: One device failure can bring down the network unless
redundant paths are used.
o Mesh Topology: Expensive to implement due to the many connections
required.
2. Logical Topology
Definition: Logical topology refers to how data flows within a network and how devices
communicate, regardless of the physical layout of the network.
• Key Concepts:
o Logical topology focuses on the flow of data rather than physical
connections.
o The logical topology may differ from the physical topology. For example, a
network using star topology physically may have a bus logical topology for
data flow.
• Examples:
o Bus Logical Topology: Even in a physically connected star topology, data may
logically travel as though it were on a bus, meaning that all devices can
access the shared medium and data is sent to all devices.
o Ring Logical Topology: In a star topology, data could still flow in a ring-like
manner, with a set sequence of nodes.
• Difference Between Physical and Logical Topology:
o Physical Topology: Describes the actual layout and how the network
components are physically connected.
o Logical Topology: Describes how data moves through the network,
irrespective of the physical design.
Introduction to Network Services
Network services are protocols and applications that facilitate communication between
devices over a network, enabling access to resources, email, web browsing, and more.
Below are some key network services and protocols:
DHCP (Dynamic Host Configuration Protocol)
Purpose: DHCP is a network protocol used to dynamically assign IP addresses and other
network configuration parameters (like subnet mask, default gateway, DNS servers) to
devices on a network.
• How It Works: When a device joins the network, the DHCP server assigns an IP
address and related configuration details. This helps reduce manual configuration
and avoids IP address conflicts.
o DHCP Process:
1. Discovery: The client sends a DHCP Discover message to find
available DHCP servers.
2. Offer: The DHCP server responds with a DHCP Offer message,
including the IP address and other settings.
3. Request: The client sends a Request message to confirm the IP
address assignment.
4. Acknowledgement: The DHCP server sends an Acknowledge
message to confirm that the IP address is assigned.
• Advantages: Simplifies network management by automatically assigning IP
addresses, reduces manual errors, and ensures proper addressing.
HTTP (Hypertext Transfer Protocol)
Purpose: HTTP is the protocol used for transmitting web pages over the internet. It is the
foundation of data communication on the World Wide Web.
• How It Works: HTTP works on a client-server model. When a user requests a web
page via a browser, an HTTP request is sent to the server. The server processes the
request and sends back the requested content, usually HTML, images, or other
media.
o HTTP Methods:
1. GET: Retrieve information from the server.
2. POST: Send data to the server (e.g., form submission).
3. PUT: Update existing data on the server.
4. DELETE: Delete a resource on the server.
• Benefits: It is the most common protocol for delivering web content, enabling
interaction between clients and web servers.
FTP (File Transfer Protocol)
Purpose: FTP is a protocol used for transferring files between a client and a server over a
network.
• How It Works: FTP requires two separate channels — a command channel for
sending commands and a data channel for transferring files. FTP supports both
uploading and downloading of files.
o Modes:
1. Active Mode: The client opens a random port to receive data.
2. Passive Mode: The server opens a random port for the client to use
for data transfer.
• Benefits: FTP is widely used for file management and sharing, with support for both
text and binary files.
SMTP (Simple Mail Transfer Protocol)
Purpose: SMTP is the protocol used to send emails between mail servers. It handles the
transmission of outbound email.
• How It Works: When you send an email, your email client communicates with an
SMTP server, which forwards the message to the recipient's mail server for delivery.
o SMTP Process:
1. The sender’s email client communicates with the SMTP server.
2. The SMTP server forwards the email to the recipient's mail server.
3. The recipient’s server stores the email until it is retrieved.
• Benefits: SMTP is simple, reliable, and efficient for sending emails across different
networks.
POP3/IMAP (Post Office Protocol/Internet Message Access Protocol)
Purpose: POP3 and IMAP are used to retrieve emails from a server, with different methods
of interaction.
• POP3 (Post Office Protocol 3):
o How It Works: POP3 downloads emails to the client and removes them from
the server. This can be problematic if you want to access your emails from
multiple devices.
o Benefits: Simple and ideal for users who want to store emails locally on one
device.
• IMAP (Internet Message Access Protocol):
o How It Works: IMAP allows users to view and organize emails without
downloading them. Emails are kept on the server, allowing access from
multiple devices.
o Benefits: More flexible than POP3, allowing users to manage email across
multiple devices (e.g., smartphones, tablets, and computers).
---------------------------------------x-------------------------------------
Network Architectures and Models
Network architecture refers to the design and structure of networks, defining the
communication protocols, data flow, and hardware involved. Let’s discuss several network
models and architectures
Client-Server Architecture
Definition: In a client-server architecture, multiple clients (users or devices) communicate
with a central server to request and receive resources or services. The server is typically
powerful and stores data, handles tasks, and responds to client requests.
• How it Works:
o A client sends a request for a service (e.g., requesting a webpage, accessing
a database).
o The server processes the request and responds (e.g., sends the requested
webpage).
o The communication follows a request-response model, which is highly
controlled by the server.
• Advantages:
o Centralized management: Easy to manage and update services.
o Security: Better control over data access and user authentication.
o Scalability: Servers can be upgraded or scaled to handle more clients.
• Disadvantages:
o Single Point of Failure: If the server goes down, all clients are affected.
o Cost: Servers can be expensive, and maintaining them can require significant
resources.
Peer-to-Peer (P2P) Architecture
Definition: In peer-to-peer (P2P) architecture, every device (peer) in the network can act as
both a server and a client. There is no central server, and each peer can share resources
(files, computing power, etc.) with others.
• How it Works:
o Devices communicate directly with each other to share resources.
o Each peer can initiate or respond to requests, depending on the situation.
• Advantages:
o Decentralization: No central point of failure; the system is fault-tolerant.
o Cost-Effective: Reduces the need for expensive servers or infrastructure.
o Scalable: New peers can join and leave the network without affecting the
network's operation.
• Disadvantages:
o Security: Harder to manage and secure, as there is no centralized control.
o Reliability: The quality of the network depends on the availability of peers.
Service-Oriented Architecture (SOA)
Definition: SOA is an architectural pattern where software components, known as services,
are designed to perform specific tasks. These services can communicate with each other
over a network, and each service is independent and reusable.
• How it Works:
o SOA breaks down an application into services that are loosely coupled. Each
service performs a business function (e.g., payment processing, inventory
management).
o Services interact with each other using standard protocols such as HTTP,
SOAP, or REST.
• Advantages:
o Modularity: Services are independent and can be updated or replaced without
affecting the entire system.
o Scalability: Each service can scale independently based on demand.
o Interoperability: Services can interact with other services in different
technologies.
• Disadvantages:
o Complexity: Implementing SOA can be challenging due to the need for
managing many services.
o Overhead: Communication between services can introduce performance
overhead.
Microservices Architecture
Definition: Microservices is a variant of SOA, where each component (or service) is much
smaller and more focused on specific functionalities. Microservices are independently
deployable, scalable, and loosely coupled.
• How it Works:
o An application is broken down into multiple small services that handle
individual business processes (e.g., one service for user authentication,
another for payment processing).
o Each service communicates with others through APIs, typically RESTful or
messaging protocols.
• Advantages:
o Independence: Services can be developed, deployed, and scaled
independently.
o Flexibility: Each service can use its own technology stack, providing flexibility
and allowing for more specialized solutions.
o Resilience: Failure of one service doesn't affect the entire application,
improving fault tolerance.
• Disadvantages:
o Complexity: Managing multiple services and coordinating their interactions
can become complex.
o Overhead: Communication between microservices can result in network
latency.
3-Way Handshake (TCP Connection Establishment)
The 3-Way Handshake is a method used in the TCP/IP protocol to establish a connection
between a client and server. It ensures that both sides are ready to communicate.
• Steps:
1. SYN: The client sends a Synchronization (SYN) message to the server,
indicating that it wants to initiate a connection.
2. SYN-ACK: The server responds with a Synchronization-Acknowledgment
(SYN-ACK) message, indicating that it has received the SYN message and is
ready to proceed.
3. ACK: The client sends an Acknowledgment (ACK) message, confirming the
server’s response, and the connection is established.
• Purpose: The 3-way handshake ensures that both sides are synchronized, agree on
sequence numbers for data packets, and are ready to begin communication.
Other Important Topics
IPv4 vs IPv6
• IPv4:
o IPv4 uses a 32-bit address format (e.g., 192.168.1.1), allowing for
approximately 4.3 billion unique IP addresses.
o Limitations: The main limitation of IPv4 is the exhaustion of available
addresses, which is insufficient to meet the growing number of connected
devices worldwide.
• IPv6:
o IPv6 uses a 128-bit address format, allowing for 340 undecillion unique
addresses, which is virtually limitless.
o It was introduced to overcome IPv4’s address exhaustion and improve
network security and performance.
Network Address Translation (NAT)
Definition: NAT is a method used by routers or firewalls to map private IP addresses to a
public IP address. It helps conserve IP addresses and adds a layer of security by hiding
internal network addresses.
• How it Works:
o When devices on a local network send requests to the internet, the NATenabled router replaces their private IP addresses with a public one.
o Responses from the internet are then sent to the router, which translates the
address back to the appropriate device.
SSL, TLS, and HTTPS
• SSL (Secure Sockets Layer):
• SSL is a protocol used to encrypt data between a client and a server, ensuring
confidentiality and integrity.
• TLS (Transport Layer Security):
• TLS is the successor to SSL and provides more robust encryption standards.
TLS is now the most widely used protocol for securing internet
communications.
• HTTPS (Hypertext Transfer Protocol Secure):
• HTTPS is HTTP (the protocol used for transferring web pages) over SSL/TLS,
ensuring secure communication.
Monolithic vs SOA vs Microservices
• Monolithic:
• In a monolithic architecture, the entire application is built as a single unit. It is
simpler to develop but harder to maintain and scale.
• SOA:
• SOA divides an application into smaller, reusable services that communicate
over a network. It is more flexible and scalable than monolithic but can be
complex to implement.
• Microservices:
• Microservices take the SOA idea further by making services smaller, more
granular, and independent. This architecture is highly scalable but introduces
its own complexity in managing numerous small services.
Firewall
Definition: A firewall is a network security device that monitors and controls incoming and
outgoing network traffic based on security rules.
• Purpose: Firewalls protect networks by filtering traffic, blocking malicious activities,
and enforcing security policies to prevent unauthorized access.
Server Farm
Definition: A server farm (or data center) is a collection of physical servers grouped together
to manage and host large-scale applications, data, or services.
• Purpose: Server farms ensure redundancy, load balancing, and fault tolerance,
providing a robust infrastructure for enterprises and web services.
Symmetric vs Asymmetric Encryption
• Symmetric Encryption:
o Uses the same key for both encryption and decryption.
o Example: AES, DES.
o Pros: Faster encryption/decryption.
o Cons: Key management can be challenging since the same key must be
securely shared.
• Asymmetric Encryption:
o Uses two keys: a public key for encryption and a private key for decryption.
o Example: RSA, ECC.
o Pros: Easier key management, no need to share private keys.
o Cons: Slower compared to symmetric encryption.
IPSec
Definition: IPSec is a suite of protocols used to secure internet protocol communications by
encrypting data and authenticating packets.
• Purpose: IPSec is commonly used in VPNs to secure communication between
networks or devices.
Difference Between IPS and a Firewall
• IPS (Intrusion Prevention System):
o An IPS actively monitors traffic to detect and prevent known attack patterns.
• Firewall:
o A firewall primarily controls incoming and outgoing traffic based on
predefined rules, usually allowing or blocking traffic based on IP address, port,
or protocol.
• Difference: While firewalls control access and monitor traffic, IPS detects and
prevents security threats by analyzing and blocking malicious activities.
Reverse Proxy
Definition: A reverse proxy is a server that sits between clients and one or more backend
servers, forwarding client requests to the appropriate server.
• Purpose: Reverse proxies are often used for load balancing, improving security,
caching content, or anonymizing requests to the backend servers.